version: '3.9'

services:
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
      - ./docker/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 300M
          cpus: '0.25'
        reservations:
          memory: 128M
    security_opt:
      - no-new-privileges:true
    user: "999:999"  # Redis user
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  nextjs:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nextjs-app
    restart: unless-stopped
    expose:
      - "${NEXTJS_INTERNAL_PORT:-3000}"
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    security_opt:
      - no-new-privileges:true
    user: "65532:65532"  # nonroot user in distroless

  nginx:
    image: openresty/openresty:1.25.3.1-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "${NGINX_EXTERNAL_PORT:-80}:80"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/security-headers.conf:/etc/nginx/conf.d/security-headers.conf:ro
    depends_on:
      - nextjs
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
    read_only: true
    tmpfs:
      - /var/cache/nginx:size=50m
      - /var/run:size=10m
      - /tmp:noexec,nosuid,size=50m
      - /usr/local/openresty/nginx/logs:size=10m
      - /var/run/openresty/nginx-client-body:size=10m
    security_opt:
      - no-new-privileges:true

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    restart: unless-stopped
    ports:
      - "${JENKINS_PORT:-8081}:8080"
      - "${JENKINS_AGENT_PORT:-50000}:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
    security_opt:
      - no-new-privileges:true
    environment:
      - JAVA_OPTS=-Djava.awt.headless=true -Xmx1g

networks:
  app-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_icc: "false"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.host_binding_ipv4: "127.0.0.1"

volumes:
  jenkins_home:
    driver: local
  redis_data:
    driver: local